

/home/d_tree/static/docker nginx mongodb


还是要尽可能坚持去使用

先用 python把单页面跑出来，等于前端修改的过程中把后端给搞定

python写后端非常简单。等于整理上功能也就算实现了。其实也就可以部署了



因为手头的东西太杂了，学得有太多了。还是有必要开始整理了不然

到后面只会影响进一步学习。用2周左右时间吧，慢慢整理

收集的部分暂时放一方。。另外还是要把考试重视起来！





docker cp 8091497f33d7:/usr/src/redmine/public/*  /opt/resource


user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    #include     ip.black;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;


server {
 listen  80;
     server_name 127.0.0.1;
     proxy_set_header    Host  $host;
     proxy_set_header    X-Real-IP  $remote_addr;
     proxy_set_header    REMOTE-HOST  $remote_addr;



     location / {

                 add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*';
	     proxy_pass http://127.0.0.1:8003/;

     }

        location ~ .*\.(html|woff|css|js){
          alias /opt/resources;
        access_log off;
        expires 168h;
        gzip on;
        gzip_comp_level 5;
        gzip_types text/plain application/javascript text/css font/woff;
    }

    location ~ .*\.(png|jpg|jpeg|gif|pdf|txt|css|js){
    root /opt/resources;
        access_log off;
        valid_referers *.test.cn servicewechat.com none;
        if ($invalid_referer) {
           return 403;
        }
        expires 168h;
    }


 }
 }